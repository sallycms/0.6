<?php
/*
 * Copyright (C) 2009 REDAXO
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License Version 2 as published by the
 * Free Software Foundation.
 */

/**
 * @package redaxo4
 */

$resize   = sly_Service_Factory::getAddOnService()->isAvailable('image_resize');
$selected = $this->getCurrentCategory();

////////////////////////////////////////////////////////
// info and error messages

print $this->render('mediapool/notices.phtml');

////////////////////////////////////////////////////////
// if file types are restricted, inform the user

if (!empty($args['types'])) {
	print sly_Helper_Message::info(t('pool_file_filter', $args['types']));
}

////////////////////////////////////////////////////////
// list all files in the current category

$form = new sly_Form('index.php', 'POST', t('pool_selectedmedia'), '', 'rex-form-mediapool-media');
$form->addHiddenValue('page', 'mediapool');
$form->addHiddenValue('func', 'batch');

// additional arguments

foreach ($this->args as $name => $value) {
	$form->addHiddenValue('args['.$name.']', $value);
}

$user    = sly_Util_User::getCurrentUser();
$isAdmin = $user->isAdmin() || $user->hasRight('media[0]');

ob_start();

?>
<table class="sly-table sly-mediapool-list" summary="">
	<caption><?= t('pool_selectedmedia') ?></caption>
	<colgroup>
		<col width="40" />
		<col width="110" />
		<col width="*" />
		<col width="153" />
	</colgroup>
	<thead><tr>
		<th class="sly-icon">-</th>
		<th><?= t('pool_file_thumbnail') ?></th>
		<th><?= t('pool_file_info') ?> / <?= t('pool_file_description') ?></th>
		<th><?= t('pool_file_functions') ?></th>
	</tr></thead>
	<?php

	// move and delete selected items

	if ($isAdmin) {
		$add_input = '';
		$select    = $this->getCategorySelect();

		if ($select->getValueCount() > 1) {
			$select->setAttribute('id', 'rex_move_file_dest_category');
			$select->setAttribute('onchange', '');

			$add_input =
				'<label for="rex_move_file_dest_category">'.t('pool_selectedmedia').'</label>'.
				$select->render().
				'<input class="rex-form-submit-2 sly-button-changecat rex-form-submit" type="submit" name="move" value="'.t('pool_changecat_selectedmedia').'" />';
		}

		$add_input .= '<input class="rex-form-submit-2 sly-button-delete rex-form-submit" type="submit" name="delete" value="'.t('pool_delete_selectedmedia').'" />';

		?>
		<tfoot><tr>
			<td class="sly-icon">
				<label class="rex-form-hidden-label" for="check_all"><?= t('pool_select_all') ?></label>
				<input class="sly-form-checkbox sly-check-all" type="checkbox" id="check_all" data-target="selectedmedia[]" />
			</td>
			<td colspan="3"><?= $add_input ?></td>
		</tr></tfoot>
		<?php
	}

	print '<tbody>';

	$files  = $this->getFiles();
	$argUrl = $this->getArgumentString();

	foreach ($files as $file) {
		$id         = $file->getId();
		$filename   = $file->getFilename();
		$title      = $file->getTitle();
		$updatedate = sly_Util_String::formatDatetime($file->getUpdateDate());
		$updateuser = $file->getUpdateUser();

		// missing file?

		if (!$file->exists()) {
			$thumbnail = '<img src="assets/mime-error.png" width="44" height="38" alt="'.t('pool_file_not_found').'" />';
		}
		else {
			$file_ext = $file->getExtension();
			$icon_src = 'assets/mime-default.png';

			if ($this->isDocType($file)) {
				$icon_src = 'assets/mime-'.$file_ext.'.png';
			}

			$alt       = $file->getTitle();
			$thumbnail = '<img src="'.$icon_src.'" alt="'.sly_html($alt).'" title="'.sly_html($alt).'" />';

			if ($this->isImage($file)) {
				$width  = $file->getWidth();
				$height = $file->getHeight();

				list($width, $height) = $this->getDimensions($width, $height, 80, 70);

				$attrs = array(
					'alt'    => $alt,
					'title'  => $alt,
					'width'  => $width,
					'height' => $height
				);

				$encoded   = urlencode($filename);
				$timestamp = $file->getUpdateDate();

				if ($resize && $width) {
					$attrs['src'] = '../imageresize/'.$width.'w__'.$height.'h__'.$encoded.'?t='.$timestamp;
				}
				else {
					$attrs['src'] = '../sally/data/mediapool/'.$encoded.'?t='.$timestamp;
				}

				$thumbnail = '<img '.sly_Util_HTML::buildAttributeString($attrs, array('alt')).' />';
			}
		}

		if ($title == '') $title = '['.t('pool_file_notitle').']';
		if ($user->hasRight('advancedMode[]')) $title .= ' ['.$id.']';

		$ilink  = 'index.php?page=mediapool_detail&amp;file_id='.$id.'&amp;rex_file_category='.$selected.$argUrl;
		$add_td = '<td>&nbsp;</td>';

		if ($isAdmin) {
			$add_td = '<td class="sly-icon"><input class="sly-form-checkbox" type="checkbox" name="selectedmedia[]" value="'.$id.'" /></td>';
		}

		?>
		<tr>
			<?= $add_td ?>
			<td class="rex-thumbnail"><a href="<?= $ilink ?>"><?= $thumbnail ?></a></td>
			<td>
				<p class="rex-tx4"><a href="<?= $ilink ?>"><?= sly_html($title) ?></a></p>
				<p class="rex-tx4"><span class="rex-suffix"><?= sly_html($filename) ?> [<?= $file->getFormattedSize() ?>]</span></p>
				<p class="rex-tx1"><?= $updatedate ?> | <?= sly_html($updateuser) ?></p>
			</td>
			<td><?php

			$opener_link = $this->getOpenerLink($file);
			print sly_Core::dispatcher()->filter('SLY_MEDIA_LIST_FUNCTIONS', $opener_link, array('medium' => $file));

			?></td>
		</tr>
		<?php
	}

	if (empty($files)): ?>
		<tr>
			<td></td>
			<td colspan="3"><?= t('pool_nomediafound') ?></td>
		</tr>
	<?php endif ?>
	</tbody>
</table>
<?php

$container = new sly_Form_Container();
$container->setContent(ob_get_clean());

$form->add($container);
$form->setResetButton(null);
$form->setSubmitButton(null);
print $form->render();
